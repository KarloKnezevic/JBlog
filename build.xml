<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns:cs="antlib:com.puppycrawl.tools.checkstyle" xmlns:jacoco="antlib:org.jacoco.ant" basedir="." default="compile" name="homework13">
	<description>
		Build file for homework13.
	</description>
	<property name="src" location="src"/>
	<property name="src.java" location="${src}/main/java"/>
	<property name="src.test" location="${src}/test/java"/>
	<property name="build" location="build"/>
	<property name="build.classes" location="${build}/classes"/>
	<property name="build.test" location="${build}/test"/>
	<property name="dist" location="dist"/>
	<property name="dist.lib" location="${dist}/lib"/>
	<property name="lib" location="weblib"/>
	<property name="web" location="web"/>
	<property name="web.lib" location="${web}/aplikacija4/WEB-INF/lib"/>
	<property name="web.xml" location="${web}/aplikacija4/WEB-INF/web.xml"/>
	<property file="config.properties"/>
	<taskdef uri="antlib:com.puppycrawl.tools.checkstyle" resource="checkstyletask.properties" classpath="${checkstyle.home}/checkstyle-5.6-all.jar"/>

	<path id="pmd.lib">
		<fileset dir="${pmd.home}/lib">
			<include name="*.jar"/>
		</fileset>
	</path>
	<path id="compile.path">
		<fileset dir="${lib}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${web.lib}">
			<include name="*.jar"/>
		</fileset>
		<pathelement location="${build.classes}"/>
	</path>
	<path id="test.path">
		<path refid="compile.path"/>
		<pathelement location="${build.test}"/>
		<fileset dir="${junit.home}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.lib"/>
	<taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask" classpathref="pmd.lib"/>

	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
		<classpath path="${findbugs.home}/lib/findbugs-ant.jar"/>
	</taskdef>
	<taskdef uri="antlib:org.jacoco.ant"
			resource="org/jacoco/ant/antlib.xml">
		<classpath path="${jacoco.home}/lib/jacocoant.jar"/>
	</taskdef>
	<target name="init">
		<tstamp/>
		<mkdir dir="${build}"/>
		<mkdir dir="${dist}"/>
	</target>

	<target name="compile" depends="init" description="Prevođenje izvornog koda">
		<mkdir dir="${build.classes}"/>
		<copy todir="${build.classes}">
			<fileset dir="${src.java}" excludes="**/*.java" />
		</copy>
		<javac srcdir="${src.java}" destdir="${build.classes}" encoding="UTF-8" debug="on" debuglevel="lines,vars,source" includeAntRuntime="false" classpathref="compile.path"/>
	</target>

	<target name="jar" depends="compile" description="Pakiranje programa u arhivu JAR">
		<mkdir dir="${dist.lib}"/>
		<jar jarfile="${dist.lib}/${ant.project.name}-${DSTAMP}.jar" basedir="${build.classes}">
			<manifest>
				<attribute name="Main-Class" value="${program}"/>
			</manifest>
		</jar>
	</target>
	<target name="war" depends="compile" description="Pakiranje programa u arhivu WAR">
		<war destfile="${dist}/aplikacija4.war" webxml="${web.xml}">
			<fileset dir="${web}/aplikacija4"/>
			<classes dir="${build.classes}"/>
		</war>
	</target>

	<target name="clean" description="Brisanje generiranog sadržaja">
		<delete dir="${build}" failonerror="false"/>
		<delete dir="${dist}" failonerror="false"/>
	</target>

	<target name="javadoc" depends="compile" description="Generiranje dokumentacije">
		<!-- Stvaranje direktorija za distribuciju -->
		<mkdir dir="${dist}/doc"/>
		<javadoc packagenames="hr.*" sourcepath="${src.java}" defaultexcludes="yes" destdir="${dist}/doc" Encoding="UTF-8" docencoding="UTF-8" charset="UTF-8" author="true" version="true" use="true" windowtitle="Dokumentacija programa">
			<classpath>
				<fileset dir="${lib}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${web.lib}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
			<doctitle>
				<![CDATA[<h1>Prvi program</h1>]]>
			</doctitle>
			<bottom>
				<![CDATA[<i>Copyright &#169; 2013 ACME.
				All Rights Reserved.</i>]]>
			</bottom>
		</javadoc>
	</target>

	<target name="cs" depends="compile">
		<mkdir dir="${dist}/checkstyle/xml"/>
		<mkdir dir="${dist}/checkstyle/html"/>
		<cs:checkstyle config="${checkstyle.home}/sun_checks_2.xml" failOnViolation="false">
			<fileset dir="${src.java}" includes="**/*.java"/>
			<formatter type="xml" toFile="${dist}/checkstyle/xml/checkstyle_errors.xml"/>
		</cs:checkstyle>
		<xslt basedir="${dist}/checkstyle/xml" destdir="${dist}/checkstyle/html" extension=".html" style="${checkstyle.home}/contrib/checkstyle-frames.xsl">
			<classpath>
				<fileset dir="${xalan.home}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</xslt>
	</target>
	<target name="pmd" depends="compile">
		<mkdir dir="${dist}/pmd/xml"/>
		<mkdir dir="${dist}/pmd/html"/>
		<pmd shortFilenames="true" encoding="UTF-8">
			<ruleset>rulesets/java/basic.xml</ruleset>
			<ruleset>rulesets/java/braces.xml</ruleset>
			<ruleset>rulesets/java/codesize.xml</ruleset>
			<ruleset>rulesets/java/controversial.xml</ruleset>
			<ruleset>rulesets/java/design.xml</ruleset>
			<ruleset>rulesets/java/finalizers.xml</ruleset>
			<ruleset>rulesets/java/imports.xml</ruleset>
			<ruleset>rulesets/java/naming.xml</ruleset>
			<ruleset>rulesets/java/optimizations.xml</ruleset>
			<ruleset>rulesets/java/strictexception.xml</ruleset>
			<ruleset>rulesets/java/strings.xml</ruleset>
			<ruleset>rulesets/java/sunsecure.xml</ruleset>
			<ruleset>rulesets/java/typeresolution.xml</ruleset>
			<ruleset>rulesets/java/unusedcode.xml</ruleset>
			<ruleset>rulesets/java/unnecessary.xml</ruleset>
			<formatter type="xml" toFile="${dist}/pmd/xml/pmd_report.xml"/>
			<fileset dir="${src.java}">
				<include name="**/*.java"/>
			</fileset>
		</pmd>
		<cpd minimumTokenCount="10" outputFile="${dist}/pmd/xml/cpd_report.xml" format="xml" encoding="UTF-8">
			<fileset dir="src">
				<include name="**/*.java"/>
			</fileset>
		</cpd>
		<xslt includes="cpd_report.xml" basedir="${dist}/pmd/xml" destdir="${dist}/pmd/html" extension=".html" style="${pmd.home}/etc/xslt/cpdhtml.xslt">
			<classpath>
				<fileset dir="${xalan.home}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</xslt>
		<xslt includes="pmd_report.xml" basedir="${dist}/pmd/xml" destdir="${dist}/pmd/html" extension=".html" style="${pmd.home}/etc/xslt/wz-pmd-report.xslt">
			<classpath>
				<fileset dir="${xalan.home}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</xslt>
	</target>

	<target name="findbugs" depends="compile">
		<mkdir dir="${dist}/findbugs/xml"/>
		<mkdir dir="${dist}/findbugs/html"/>
		<findbugs home="${findbugs.home}" output="xml:withMessages" outputFile="${dist}/findbugs/xml/report.xml" workHard="true" effort="max" projectName="${ant.project.name}">
			<auxClasspath path="${lib}/jsp-api.jar" />
			<auxClasspath path="${lib}/servlet-api.jar" />
			
			<auxClasspath path="${web.lib}/jcommon-1.0.17.jar" />
			<auxClasspath path="${web.lib}/jfreechart-1.0.14.jar" />
			<auxClasspath path="${web.lib}/poi-3.9-20121203.jar" />
			
			<sourcePath path="${src.java}"/>
			<class location="${build.classes}"/>
		</findbugs>
		<xslt includes="report.xml" basedir="${dist}/findbugs/xml" destdir="${dist}/findbugs/html" extension=".html" style="${findbugs.home}/src/xsl/fancy.xsl">
			<classpath>
				<fileset dir="${xalan.home}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</xslt>
	</target>

	<target name="quality" depends="findbugs,cs,pmd">
	</target>
	<target name="reports" depends="quality,javadoc">
	</target>
</project>
